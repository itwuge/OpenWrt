#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Openwrt-wuge-Lean

on:
  workflow_dispatch:
  repository_dispatch:
# release:
#   types: published
# push:
#   branches:
#     - master
#   paths:
#     - 'Lean'
   schedule:
     - cron: 0 */18 * * *
#   watch:
#     types: started
  
env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: config-x86-Lean
  DIY_SH: diy-x86-Lean.sh
  SSH_ACTIONS:  false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: 拉取项目
      uses: actions/checkout@master

    - name: 初始环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get update
          sudo -E apt-get -y install $(curl -fsSL git.io/depends-ubuntu-2004)
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo timedatectl set-timezone "$TZ" 
          export FORCE_UNSAFE_CONFIGURE=1
          
          echo "========================================"
          echo "[Space Usage]:"
          echo "========================================"
          df -hT
          echo "========================================"
          echo "[File List]:" 
          echo "========================================"
          echo "Current Path:" $PWD
          ls -l -A
          echo "========================================"
        
    - name: 下载源码
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt && cd openwrt && ./scripts/feeds clean && ./scripts/feeds update -a && ./scripts/feeds install -a
   
    - name: 导入自定义
      run: |
        git clone https://github.com/itwuge/diy ./openwrt/diy/sypopo
        mv ./openwrt/diy/sypopo/$CONFIG_FILE $(pwd)
        mv ./openwrt/diy/sypopo/$DIY_SH $(pwd)
        df -h && pwd
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH && cd openwrt && ../$DIY_SH

    - name: SSH连接
      uses: itwuge/Actions@master
      if: env.SSH_ACTIONS == 'true'
        
    - name: 下载软件包
      id: package
      run: |
        cd openwrt && make defconfig && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: 固件编译
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"
        echo "======================="
        echo "Space usage:"
        echo "======================="
        df -h
        echo "======================="
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin
        cp -f .config ./bin/targets/*/*/
        
    - name: 整理文件
      run: |
        cd openwrt
        mkdir -p ./artifact/package
        mkdir -p ./artifact/buildinfo
        rm -rf $(find ./bin/targets/ -type d -name "packages")
        cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
        cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
        cp ./.config ./artifact/buildinfo/

    - name: 上传构建信息
      uses: actions/upload-artifact@v3
      with:
        name: OpenWrt_buildinfo
        path: ./openwrt/artifact/buildinfo/

    - name: 长传包
      uses: actions/upload-artifact@v3
      with:
        name: OpenWrt_package
        path: ./openwrt/artifact/package/

    - name: 上传固件
      uses: actions/upload-artifact@v3
      with:
        name: OpenWrt_firmware
        path: ./openwrt/bin/targets/
